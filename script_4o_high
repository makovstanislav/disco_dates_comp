/**
 * Copy dates from «GFE» → «Main» and flag changes in G/H.
 * • Starts at row 3 (0-based index 2).
 * • Copies FA/Disco dates into Main cols E/F.
 * • Writes "Y" in Main cols G/H if dates differ.
 * • All variables and functions have explicit types.
 */

// Normalize any cell value to a primitive (string | number) for comparison
function normalizeValue(value: ExcelScript.CellValue): string | number {
  if (value === "" || value === null || value === undefined) {
    return "";
  }
  if (typeof value === "number") {
    return value;
  }
  if (value instanceof Date) {
    return value.getTime();
  }
  return String(value).trim();
}

// Compare two cell values (as dates or blanks)
function datesEqualValue(a: ExcelScript.CellValue, b: ExcelScript.CellValue): boolean {
  const normA: string | number = normalizeValue(a);
  const normB: string | number = normalizeValue(b);
  return normA === normB;
}

// Main entry point
function main(workbook: ExcelScript.Workbook): void {
  const START_ROW: number = 2; // row 3 in Excel

  // Получаем листы (non-null assertion)
  const wsMain: ExcelScript.Worksheet = workbook.getWorksheet("Main")!;
  const wsGFE: ExcelScript.Worksheet  = workbook.getWorksheet("GFE")!;

  // Читаем GFE
  const gfeRange: ExcelScript.Range = wsGFE.getUsedRange()!;
  const gfeData: ExcelScript.CellValue[][] = gfeRange.getValues() as ExcelScript.CellValue[][];

  // Тип для хранения пар дат
  interface DatesPair { fa: ExcelScript.CellValue; disco: ExcelScript.CellValue; }
  const lookup: Record<string, DatesPair> = {};

  // Строим словарь «материал|сезон» → даты
  for (let rowIndex: number = START_ROW; rowIndex < gfeData.length; rowIndex++) {
    const materialKey: string = String(gfeData[rowIndex][0]);
    const seasonKey: string   = String(gfeData[rowIndex][1]);
    if (materialKey === "" || seasonKey === "") continue;
    const key: string = `${materialKey}|${seasonKey}`;
    lookup[key] = {
      fa:    gfeData[rowIndex][2],
      disco: gfeData[rowIndex][3]
    };
  }

  // Читаем Main
  const mainRange: ExcelScript.Range = wsMain.getUsedRange()!;
  const mainData: ExcelScript.CellValue[][] = mainRange.getValues() as ExcelScript.CellValue[][];

  // Обрабатываем строки Main
  for (let rowIndex: number = START_ROW; rowIndex < mainData.length; rowIndex++) {
    const materialKey: string = String(mainData[rowIndex][0]);
    const seasonKey: string   = String(mainData[rowIndex][1]);
    if (materialKey === "" || seasonKey === "") continue;
    const key: string = `${materialKey}|${seasonKey}`;
    const dates: DatesPair | undefined = lookup[key];
    if (!dates) continue;

    // Копируем даты в столбцы E (index 4) и F (index 5)
    mainData[rowIndex][4] = dates.fa;
    mainData[rowIndex][5] = dates.disco;

    // Флаг «Y» в G/H (индексы 6/7), если даты отличаются
    if (!datesEqualValue(mainData[rowIndex][2], dates.fa)) {
      mainData[rowIndex][6] = "Y";
    }
    if (!datesEqualValue(mainData[rowIndex][3], dates.disco)) {
      mainData[rowIndex][7] = "Y";
    }
  }

  // Записываем результат обратно
  mainRange.setValues(mainData);
}
