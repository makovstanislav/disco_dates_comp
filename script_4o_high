/**
 * Office Script: synchronize dates from GFE to Main and flag changes.
 *
 * • Starts at row 3 (0-based index 2).
 * • Copies First Available / Discontinue dates into Main cols E/F.
 * • Marks "Y" in Main cols G/H when dates differ.
 */

// Convert Excel serial date to JS milliseconds (handles 1900 leap year bug)
function excelSerialToMillis(serial: number): number {
  const offsetDays: number = serial > 60 ? serial - 1 : serial;
  const epoch: Date = new Date(Date.UTC(1899, 11, 31));
  return epoch.getTime() + offsetDays * 24 * 60 * 60 * 1000;
}

// Convert any cell value to milliseconds (or undefined if blank/non-date)
function toMillis(value: ExcelScript.CellValue): number | undefined {
  if (value === null || value === undefined || value === "") return undefined;
  if (typeof value === "number") return excelSerialToMillis(value);
  if (value instanceof Date) return value.getTime();
  if (typeof value === "string") {
    const dt: Date = new Date(value);
    return isNaN(dt.getTime()) ? undefined : dt.getTime();
  }
  return undefined;
}

// Compare two cell values as dates or blanks
function datesEqual(a: ExcelScript.CellValue, b: ExcelScript.CellValue): boolean {
  const msA = toMillis(a);
  const msB = toMillis(b);
  if (msA === undefined && msB === undefined) return true;
  return msA !== undefined && msB !== undefined && msA === msB;
}

// Main script
function main(workbook: ExcelScript.Workbook): void {
  const START_ROW: number = 2;
  const wsMain = workbook.getWorksheet("Main")!;
  const wsGFE = workbook.getWorksheet("GFE")!;

  // Read GFE data
  const gfeRange = wsGFE.getUsedRange()!;
  const gfeData = gfeRange.getValues() as ExcelScript.CellValue[][];

  // Build lookup by "material|season"
  interface DatesPair { fa: ExcelScript.CellValue; disco: ExcelScript.CellValue; }
  const lookup: Record<string, DatesPair> = {};
  for (let i = START_ROW; i < gfeData.length; i++) {
    const mat = gfeData[i][0];
    const sea = gfeData[i][1];
    if (!mat || !sea) continue;
    const key = `${mat}|${sea}`;
    lookup[key] = { fa: gfeData[i][2], disco: gfeData[i][3] };
  }

  // Read Main data
  const mainRange = wsMain.getUsedRange()!;
  const mainData = mainRange.getValues() as ExcelScript.CellValue[][];

  // Update Main rows
  for (let i = START_ROW; i < mainData.length; i++) {
    const mat = mainData[i][0];
    const sea = mainData[i][1];
    if (!mat || !sea) continue;
    const key = `${mat}|${sea}`;
    const dp = lookup[key];
    if (!dp) continue;

    // Copy dates
    mainData[i][4] = dp.fa;
    mainData[i][5] = dp.disco;

    // Flag changes
    if (!datesEqual(mainData[i][2], dp.fa)) mainData[i][6] = "Y";
    if (!datesEqual(mainData[i][3], dp.disco)) mainData[i][7] = "Y";
  }

  // Write back to Main
  mainRange.setValues(mainData);
}
